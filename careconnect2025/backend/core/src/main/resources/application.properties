spring.application.name=careconnect
# JPA / Hibernate Configuration - Let JPA handle schema for now
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO}
spring.jpa.show-sql=false

# Critical: Defer JPA initialization until after database is ready
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never


# Database Configuration - We replaced the spring.datasource.* one's to avoid conflicts
careconnect.db.url=${JDBC_URI}
careconnect.db.username=${DB_USER}
careconnect.db.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Disable startup info logging
spring.main.banner-mode=off
spring.output.ansi.enabled=never

# Comprehensive Logging Configuration
logging.level.root=WARN
logging.level.com.careconnect=INFO
logging.level.org.springframework=WARN
logging.level.org.springframework.boot=INFO
logging.level.org.hibernate=WARN
logging.level.org.apache=WARN
logging.level.com.zaxxer.hikari=INFO
logging.level.org.flywaydb=INFO
logging.pattern.console=%d{HH:mm:ss.SSS} %-5level - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n


# Performance optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Additional Safe Performance Optimizations
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=2048
spring.jpa.properties.hibernate.query.plan_parameter_metadata_max_size=128

# Database Connection Pool Optimizations
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# Subscription price ID mappings
# Comma-separated list of Stripe price IDs for each plan type
subscription.premium-price-ids=price_1RmqWxELoozGI1YxQql5rsvN
subscription.standard-price-ids=price_standard
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.auto-commit=false

# JVM and Spring Boot Performance
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Optional: Server port (defaults to 8080)
# server.port=8080

# Email Configuration - Environment-based setup
# For DEVELOPMENT: Use Mailtrap (catches emails for testing)
# For PRODUCTION: Use SendGrid or Gmail (sends real emails)

# Development (Mailtrap) - Set EMAIL_PROVIDER=mailtrap
spring.mail.host=${MAIL_HOST:live.smtp.mailtrap.io}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:api}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:true}

# Email provider selection
# Options: console, mailtrap, smtp, resend, mailgun, sendgrid, gmail
# - console: Log emails to console (basic development)
# - mailtrap: Use Mailtrap for email testing (recommended for development)
# - smtp: Generic SMTP server
# - resend: Resend API (production)
# - mailgun: Mailgun API (production)
# - sendgrid: SendGrid (production)
# - gmail: Gmail SMTP (production)
careconnect.email.provider=${EMAIL_PROVIDER:sendgrid}

# From email address - Must be a valid domain for Mailtrap/SMTP
# For Mailtrap: Use any valid email format (doesn't need to be real)
# For production: Use your actual domain
careconnect.email.from=${FROM_EMAIL:smpestest@gmail.com}

# API-based email provider configurations
# These are used when EMAIL_PROVIDER is set to the respective service

# Resend API configuration
careconnect.email.resend.api-key=${RESEND_API_KEY:}

# SendGrid API configuration
careconnect.email.sendgrid.api-key=${SENDGRID_API_KEY:}

# Mailgun API configuration
careconnect.email.mailgun.api-key=${MAILGUN_API_KEY:}
careconnect.email.mailgun.domain=${MAILGUN_DOMAIN:}

# Frontend base URL for email links
frontend.base-url=${APP_FRONTEND_BASE_URL:http://localhost:3000}

# Upload directory configuration - Use environment variable for security
careconnect.upload.dir=${UPLOAD_DIR:${user.home}/Documents/uploads}
careconnect.baseurl=${BASE_URL:http://localhost:8080}
careconnect.cors_allowed=${CORS_ALLOWED_LIST:https://care-connect-develop.d26kqsucj1bwc1.amplifyapp.com}

security.jwt.secret=${SECURITY_JWT_SECRET}
jwt.expiration.ms=${JWT_EXPIRATION:10800000}

stripe.secret-key=${STRIPE_SECRET_KEY}
openai.api-key=${OPENAI_API_KEY}
stripe.webhook-secret=${STRIPE_WEBHOOK_SIGNING_SECRET}


spring.security.oauth2.client.registration.fitbit.client-id=${FITBIT_CLIENT_ID}
spring.security.oauth2.client.registration.fitbit.client-secret=${FITBIT_CLIENT_SECRET}
spring.security.oauth2.client.registration.fitbit.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.fitbit.redirect-uri={baseUrl}/login/oauth2/code/fitbit
spring.security.oauth2.client.registration.fitbit.scope=activity,heartrate,sleep,weight,profile

spring.security.oauth2.client.provider.fitbit.authorization-uri=https://www.fitbit.com/oauth2/authorize
spring.security.oauth2.client.provider.fitbit.token-uri=https://api.fitbit.com/oauth2/token
spring.security.oauth2.client.provider.fitbit.user-info-uri=https://api.fitbit.com/1/user/-/profile.json
spring.security.oauth2.client.provider.fitbit.user-name-attribute=user_id



spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}

spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE:openid,email,profile}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:{baseUrl}/login/oauth2/code/google}
spring.security.oauth2.client.registration.google.client-name=${GOOGLE_CLIENT_NAME:Google}

spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTH_URI:https://accounts.google.com/o/oauth2/v2/auth}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI:https://oauth2.googleapis.com/token}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USERINFO_URI:https://www.googleapis.com/oauth2/v3/userinfo}

spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# OpenAPI Documentation Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.filter=true
# Disable default OpenAPI security for documentation endpoints
springdoc.swagger-ui.disable-swagger-default-url=true

# Firebase Configuration for Push Notifications
firebase.project-id=${FIREBASE_PROJECT_ID:careconnectcapstone}
firebase.service-account-key=${FIREBASE_SERVICE_ACCOUNT_KEY:firebase-service-account.json}
firebase.sender-id=${FIREBASE_SENDER_ID:663999888931}

# Flyway Configuration - TEMPORARILY DISABLED to resolve circular dependency
spring.flyway.enabled=false
# spring.flyway.locations=classpath:db/migration
# spring.flyway.baseline-on-migrate=true
#
# # Migration handling optimizations
# spring.flyway.out-of-order=true
# spring.flyway.ignore-missing-migrations=true
# spring.flyway.validate-on-migrate=false
# spring.flyway.clean-disabled=true
#
# # Performance optimizations
# spring.flyway.sql-migration-suffixes=.sql
# spring.flyway.connect-retries=3
# spring.flyway.connect-retries-interval=10
#
# # Resolve circular dependency by ensuring proper initialization order
# spring.flyway.init-sql=SET FOREIGN_KEY_CHECKS=0;
# spring.jpa.properties.hibernate.hbm2ddl.auto=none


aws.s3.access-key=${AWS_ACCESS_KEY_ID}
aws.s3.secret-key=${AWS_SECRET_ACCESS_KEY}
aws.s3.bucket=${AWS_S3_BUCKET:cc-internal-file-storage-us-east-1-641592448579}
aws.s3.region=${AWS_DEFAULT_REGION:us-east-1}
aws.s3.base-url=${AWS_S3_BASE_URL:https://cc-internal-file-storage-us-east-1-641592448579.s3.us-east-1.amazonaws.com}

# File upload settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
